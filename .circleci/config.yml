# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

defaults: &defaults
  working_directory: /tmp

version: 2
jobs:
  build_test_java:
    <<: *defaults
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:9-jdk-node-browsers
        environment:
          CC_TEST_REPORTER_ID: $CC_TEST_REPORTER_ID
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    
    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
        
      # run tests!
      - run: gradle test jacocoJupTestReport

      #upload test coverage to codecov
      - run: bash <(curl -s https://codecov.io/bash)

      # upload test coverage to code climate
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
            #./tmp/cc-test-reporter before-build
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter
      - run: 
          name: Upload to cc
          command: |
            cd ./src/
            ../tmp/cc-test-reporter format-coverage -t jacoco ../build/reports/jacoco/report.xml -o ../tmp/coverage/codeclimate.java.json
            cd ..
            ./tmp/cc-test-reporter upload-coverage

      # upload test coverage to codacy
      # - run: 
      #     command: |
      #       wget -O codacy-coverage-reporter-assembly.jar https://oss.sonatype.org/service/local/repositories/releases/content/com/codacy/codacy-coverage-reporter/2.0.2/codacy-coverage-reporter-2.0.2-assembly.jar
      #       java -cp codacy-coverage-reporter-assembly.jar com.codacy.CodacyCoverageReporter -l Java -r build/reports/jacoco/report.xml
      #       export CODACY_PROJECT_TOKEN=%CODACY_PROJECT_TOKEN%
      #       codacy-coverage-reporter -l Java -r build/reports/jacoco/report.xml

  build_test_python:
    <<: *defaults
    docker:      
      - image: circleci/python:3.6.1
        environment:
          CC_TEST_REPORTER_ID: $CC_TEST_REPORTER_ID

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python3 -m pip install -r requirements.txt
            coverage-3.6 run scripts/run_unit_tests.py
            coverage-3.6 xml
            python3 scripts/create_problems_list.py

      # upload test coverage to codecov
      - run: bash <(curl -s https://codecov.io/bash)

      # upload test coverage to code climate
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
            #./tmp/cc-test-reporter before-build
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter
      - run: 
          name: Upload to cc
          command: |
            cd ./src/
            ../tmp/cc-test-reporter format-coverage -t coverage.py ../coverage.xml -o ../tmp/coverage/codeclimate.python.json
            cd ..
            ./tmp/cc-test-reporter upload-coverage
      
      # upload test coverage to codacy
      # - run:
      #     command: |
      #       export CODACY_PROJECT_TOKEN=%CODACY_PROJECT_TOKEN%
      #       python3 -m codacy-coverage -r coverage.xml

  upload_to_code_climate:
    <<: *defaults
    machine: true
    working_directory: ~/repo
    environment: 
      - CC_TEST_REPORTER_ID: $CC_TEST_REPORTER_ID
    steps:
      - attach_workspace:
          at: ~/repo/tmp
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter sum-coverage ./tmp/coverage/codeclimate.*.json -p 2 -o ./tmp/coverage/codeclimate.total.json
            ./tmp/cc-test-reporter upload-coverage -i ./tmp/coverage/codeclimate.total.json

workflows:
  version: 2
  build-test:
    jobs:
      - build_test_java:
          filters:
            branches:
              only:
                - master
      - build_test_python:        
          filters:
            branches:
              only:
                - master
      - upload_to_code_climate:        
          filters:
            branches:
              only:
                - master
          requires:
            - build_test_java
            - build_test_python